[{"C:\\Users\\Legion\\Desktop\\portfolio\\src\\index.tsx":"1","C:\\Users\\Legion\\Desktop\\portfolio\\src\\App.tsx":"2","C:\\Users\\Legion\\Desktop\\portfolio\\src\\components\\Hero.tsx":"3","C:\\Users\\Legion\\Desktop\\portfolio\\src\\components\\Projects.tsx":"4","C:\\Users\\Legion\\Desktop\\portfolio\\src\\assets\\projects\\projects.ts":"5","C:\\Users\\Legion\\Desktop\\portfolio\\src\\components\\Project.tsx":"6","C:\\Users\\Legion\\Desktop\\portfolio\\src\\components\\ProjectDetails\\ProjectDetails.tsx":"7","C:\\Users\\Legion\\Desktop\\portfolio\\src\\components\\ProjectDetails\\ProjectDetailsBody.tsx":"8","C:\\Users\\Legion\\Desktop\\portfolio\\src\\components\\ProjectDetails\\Smartphone.tsx":"9","C:\\Users\\Legion\\Desktop\\portfolio\\src\\components\\Technologies.tsx":"10","C:\\Users\\Legion\\Desktop\\portfolio\\src\\assets\\skills\\skills.ts":"11","C:\\Users\\Legion\\Desktop\\portfolio\\src\\components\\Skill.tsx":"12","C:\\Users\\Legion\\Desktop\\portfolio\\src\\Ui\\Spinner.tsx":"13","C:\\Users\\Legion\\Desktop\\portfolio\\src\\components\\Footer.tsx":"14","C:\\Users\\Legion\\Desktop\\portfolio\\src\\components\\HeroPhoto.tsx":"15"},{"size":228,"mtime":1608979063455,"results":"16","hashOfConfig":"17"},{"size":342,"mtime":1609142641868,"results":"18","hashOfConfig":"17"},{"size":1127,"mtime":1609185445717,"results":"19","hashOfConfig":"17"},{"size":952,"mtime":1609147692463,"results":"20","hashOfConfig":"17"},{"size":1520,"mtime":1609164685025,"results":"21","hashOfConfig":"17"},{"size":1402,"mtime":1609142461289,"results":"22","hashOfConfig":"17"},{"size":1729,"mtime":1609149621181,"results":"23","hashOfConfig":"17"},{"size":1468,"mtime":1609094672673,"results":"24","hashOfConfig":"17"},{"size":766,"mtime":1609148832048,"results":"25","hashOfConfig":"17"},{"size":556,"mtime":1609137243943,"results":"26","hashOfConfig":"17"},{"size":1033,"mtime":1609140717295,"results":"27","hashOfConfig":"17"},{"size":456,"mtime":1609138614324,"results":"28","hashOfConfig":"17"},{"size":715,"mtime":1609139618660,"results":"29","hashOfConfig":"17"},{"size":1243,"mtime":1609146860386,"results":"30","hashOfConfig":"17"},{"size":2089,"mtime":1609187808633,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"uotl2d",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"34"},"C:\\Users\\Legion\\Desktop\\portfolio\\src\\index.tsx",[],["66","67"],"C:\\Users\\Legion\\Desktop\\portfolio\\src\\App.tsx",[],"C:\\Users\\Legion\\Desktop\\portfolio\\src\\components\\Hero.tsx",[],"C:\\Users\\Legion\\Desktop\\portfolio\\src\\components\\Projects.tsx",[],"C:\\Users\\Legion\\Desktop\\portfolio\\src\\assets\\projects\\projects.ts",[],"C:\\Users\\Legion\\Desktop\\portfolio\\src\\components\\Project.tsx",[],"C:\\Users\\Legion\\Desktop\\portfolio\\src\\components\\ProjectDetails\\ProjectDetails.tsx",[],"C:\\Users\\Legion\\Desktop\\portfolio\\src\\components\\ProjectDetails\\ProjectDetailsBody.tsx",[],"C:\\Users\\Legion\\Desktop\\portfolio\\src\\components\\ProjectDetails\\Smartphone.tsx",[],["68","69"],"C:\\Users\\Legion\\Desktop\\portfolio\\src\\components\\Technologies.tsx",[],"C:\\Users\\Legion\\Desktop\\portfolio\\src\\assets\\skills\\skills.ts",[],"C:\\Users\\Legion\\Desktop\\portfolio\\src\\components\\Skill.tsx",[],"C:\\Users\\Legion\\Desktop\\portfolio\\src\\Ui\\Spinner.tsx",[],["70","71"],"C:\\Users\\Legion\\Desktop\\portfolio\\src\\components\\Footer.tsx",[],"C:\\Users\\Legion\\Desktop\\portfolio\\src\\components\\HeroPhoto.tsx",["72"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport HeroImg from \"../assets/images/HeroImage.svg\";\r\nimport { gsap, Power4 } from \"gsap\";\r\n\r\nconst HeroPhoto: React.FC = () => {\r\n  // const [showAbout, setshowAbout] = useState<boolean>(false);\r\n  let imageRef = useRef<HTMLHeadingElement | null>(null);\r\n  let dialogue = useRef<HTMLHeadingElement | null>(null);\r\n  let circle1 = useRef<HTMLHeadingElement | null>(null);\r\n  let circle2 = useRef<HTMLHeadingElement | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (imageRef.current) {\r\n      gsap.from(imageRef.current.firstElementChild, {\r\n        duration: 3,\r\n        opacity: 0,\r\n        ease: Power4.easeIn,\r\n        transformOrigin: \"top left\",\r\n      });\r\n      gsap.from(imageRef.current.lastElementChild, {\r\n        duration: 1,\r\n        delay: 2,\r\n        opacity: 0,\r\n        ease: Power4.easeOut,\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  //  useEffect(()=>{\r\n  //    if(showAbout){\r\n\r\n  //    }\r\n\r\n  //  },[showAbout])\r\n\r\n  const clickHandler = () => {\r\n    // setshowAbout(true);\r\n    gsap.to(dialogue.current, {\r\n      visibility: \"visible\",\r\n    });\r\n    if (dialogue.current) {\r\n      gsap.to(circle2.current, {\r\n        opacity: 1,\r\n        duration: 0.5,\r\n        scale: 1,\r\n      });\r\n      gsap.to(circle1.current, {\r\n        opacity: 1,\r\n        duration: 0.5,\r\n        delay: 0.5,\r\n        scale: 1,\r\n      });\r\n      gsap.to(dialogue.current.firstElementChild, {\r\n        opacity: 1,\r\n        duration: 0.5,\r\n        delay: 1,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n      <div ref={imageRef} className=\"hero-imageBox\">\r\n        <img className=\"hero-image\" src={HeroImg} alt=\"profilImage\" />\r\n        <div ref={dialogue} className=\"about\">\r\n          <div className=\"about-context\">I'm Circular speech bubble</div>\r\n          <div ref={circle1} className=\"circle1\"></div>\r\n          <div ref={circle2} className=\"circle2\"></div>\r\n        </div>\r\n        <button onClick={clickHandler} className=\"hero-image-btn\">\r\n          Tell me something\r\n        </button>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default HeroPhoto;\r\n",{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"73","replacedBy":"77"},{"ruleId":"75","replacedBy":"78"},{"ruleId":"73","replacedBy":"79"},{"ruleId":"75","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":1,"column":36,"nodeType":"83","messageId":"84","endLine":1,"endColumn":44},"no-native-reassign",["85"],"no-negated-in-lhs",["86"],["85"],["86"],["85"],["86"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]